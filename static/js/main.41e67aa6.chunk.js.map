{"version":3,"sources":["components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","isSelected","getParent","name","sex","born","died","motherName","fatherName","slug","mother","father","classNames","to","PeopleTable","selectedPerson","people","parentName","find","map","PeoplePage","useParams","useState","setPeople","hasLoadingError","setHasLoadingError","isIntialized","setIsIntialized","getPeopleFromServer","peopleFromServer","useEffect","length","NotFoundPage","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.41e67aa6.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person,\n  isSelected: (slug: string) => boolean,\n  getParent: (parentName: string | null) => Person | undefined,\n};\n\nexport const PersonLink: React.FC<Props> = (\n  { person, isSelected, getParent },\n) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  // eslint-disable-next-line no-param-reassign\n  person.mother = getParent(motherName);\n  // eslint-disable-next-line no-param-reassign\n  person.father = getParent(fatherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': isSelected(slug),\n      })}\n    >\n      <td>\n        <Link\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n          to={`/people/${slug}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {person.mother\n          ? (\n            <Link\n              className=\"has-text-danger\"\n              to={`/people/${person.mother?.slug}`}\n            >\n              {motherName}\n            </Link>\n          )\n          : (\n            <>\n              {motherName || '-'}\n            </>\n          )}\n      </td>\n      <td>\n        {person.father\n          ? (\n            <Link\n              className=\"has-text-blue\"\n              to={`/people/${person.father?.slug}`}\n            >\n              {fatherName}\n            </Link>\n          )\n          : (\n            <>\n              {fatherName || '-'}\n            </>\n          )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n  selectedPerson: string,\n};\n\nexport const PeopleTable: React.FC<Props> = (\n  { selectedPerson, people },\n) => {\n  const isSelected = (slug: string) => slug === selectedPerson;\n  const getParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    return parent;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n            isSelected={isSelected}\n            getParent={getParent}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const { slug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [isIntialized, setIsIntialized] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n      setIsIntialized(true);\n    } catch {\n      setHasLoadingError(true);\n    } finally {\n      setIsIntialized(true);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!isIntialized && (\n            <Loader />\n          )}\n\n          {isIntialized && hasLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n          {isIntialized && !hasLoadingError && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {isIntialized && !hasLoadingError && people.length > 0 && (\n            <PeopleTable\n              people={people}\n              selectedPerson={slug || ''}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => classNames('navbar-item',\n                {\n                  'has-background-grey-lighter': isActive,\n                })}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => classNames('navbar-item',\n                {\n                  'has-background-grey-lighter': isActive,\n                })}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route\n              path=\"people/:slug\"\n              element={<PeoplePage />}\n            />\n            <Route\n              path=\"people\"\n              element={<PeoplePage />}\n            />\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}